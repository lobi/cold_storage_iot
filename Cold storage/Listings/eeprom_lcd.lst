C51 COMPILER V9.60.7.0   EEPROM_LCD                                                        09/22/2024 14:40:48 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE EEPROM_LCD
OBJECT MODULE PLACED IN .\Objects\eeprom_lcd.obj
COMPILER INVOKED BY: G:\Program\Keil_v5\C51\BIN\C51.EXE eeprom_lcd.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.
                    -\Listings\eeprom_lcd.lst) TABS(2) OBJECT(.\Objects\eeprom_lcd.obj)

line level    source

   1          #include<reg52.h> 
   2          
   3          #include "I2C.h"
   4          #include "UART.h"
   5          #include "delay.h"
   6          #include "LCD8bit.h"
   7          
   8          
   9          unsigned int  i;
  10          unsigned char seridata = 155;
  11          
  12          void EepromWriteByte( unsigned char Data,unsigned char Address, unsigned char Page)
  13          {
  14   1      
  15   1          I2CStart(); 
  16   1          I2CSend(0xA0|(Page<<1));  
  17   1          I2CSend(Address); 
  18   1          I2CSend(Data);    
  19   1          I2CStop();             
  20   1          Delay_ms(5);        
  21   1      }
  22          
  23          
  24          
  25          unsigned char EepromReadByte(unsigned char Address,unsigned char Page)
  26          {
  27   1        unsigned char Data;
  28   1      
  29   1          I2CStart();            
  30   1          I2CSend(0xA0|(Page<<1));    
  31   1          I2CSend(Address); 
  32   1          I2CStart();      
  33   1          I2CSend(0xA1|(Page<<1));           
  34   1          Data = I2CRead(); 
  35   1          I2CNak();
  36   1          I2CStop();            
  37   1          Delay_us(10);
  38   1          return Data;          
  39   1      }
  40          
  41          
  42            void EepromWriteNBytes(unsigned char Location, unsigned char *Pointer, char N, unsigned char Page)
  43             {
  44   1          while(N !=  0)
  45   1           {
  46   2          EepromWriteByte(Location,*Pointer,Page);
  47   2          Location++;Pointer++;N--;   
  48   2           }
  49   1         }
  50          
  51          
  52          
  53            void EepromReadNBytes(unsigned char Location, unsigned char *Pointer, char N,unsigned char Page)
  54             {
C51 COMPILER V9.60.7.0   EEPROM_LCD                                                        09/22/2024 14:40:48 PAGE 2   

  55   1           while(N !=  0)
  56   1          {
  57   2           *Pointer = EepromReadByte(Location,Page);
  58   2            Location++;Pointer++;N--;
  59   2           }
  60   1         }
  61          
  62             void EepromErasePage(unsigned char Page)
  63             {
  64   1          unsigned char i;
  65   1          for(i=0;i<255;i++)
  66   1          EepromWriteByte(0x00,i,Page); 
  67   1       }
  68          
  69          
  70          
  71            void EepromEraseAll()
  72             {
  73   1          unsigned char i;
  74   1          for(i=0;i<255;i++){
  75   2          EepromWriteByte(0x00,i,0);
  76   2          EepromWriteByte(0x00,i,1);} 
  77   1         }
  78           
  79          
  80          void main (void)
  81          {
  82   1        char Name[]="IoT Project";
  83   1        
  84   1        initializeLCD();
  85   1        setCursor(0,0);
  86   1        
  87   1        Disp("EEPROM Reading");
  88   1        
  89   1        for(i =0; i<14; i++)
  90   1        EepromWriteByte(Name[i],i,0);
  91   1        
  92   1        setCursor(0,1); 
  93   1        for(i =0; i<14; i++)
  94   1          {                     
  95   2          Data(EepromReadByte(i,0));
  96   2          
  97   2          Delay_ms(500);
  98   2        }
  99   1          
 100   1        // Store EEPROM to testing UART///////////////
 101   1        uartinit();
 102   1        initializeLCD();
 103   1        setCursor(0,0);
 104   1        Disp("UART TESTING");
 105   1      
 106   1      
 107   1        
 108   1        setCursor(0,1); 
 109   1        Disp("Send data: 155");
 110   1        
 111   1        ////////////////////////////////////////////////
 112   1        while(1)
 113   1          {
 114   2          uart_write(seridata);
 115   2            
 116   2          };
C51 COMPILER V9.60.7.0   EEPROM_LCD                                                        09/22/2024 14:40:48 PAGE 3   

 117   1      }
*** WARNING C316 IN LINE 117 OF eeprom_lcd.c: unterminated conditionals


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    923    ----
   CONSTANT SIZE    =     55    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3      40
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
